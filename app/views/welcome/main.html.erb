
<% flash.each do |message_type, message| %>
    <div class="alert alert-<%= message_type %>"><%= message %></div>
<% end %>

<h1>Please refresh page.</h1>
<div id="map"></div>

<!-- Leaflet -->
<script src="http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.js"></script>
<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.css" />

<!-- include cartodb.js library -->
<script src="http://libs.cartocdn.com/cartodb.js/v3/3.15/cartodb.js"></script>

<style>
    body { margin:0; padding:0; }
    #map-canvas { position:absolute; top:0; bottom:0; width:100%; }
</style>

<div id="map-canvas"></div>

<!-- Tag to store rails variable that holds most recent athlete information-->
<%= content_tag :div, class: "racers_class", data: {racers: @racers} do %>
<% end %>

<script>
    function main() {
        var map = L.map('map-canvas', {
            scrollWheelZoom: false,
            center: [40.7127837, -74.0059413],
            zoom: 3

        });

        var layer = L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}@2x.png', {
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, &copy; <a href="http://cartodb.com/attributions">CartoDB</a>'
        });

        map.addLayer(layer);

        function onEachFeature(feature, layer) {
            // check if feature contains popupContent
            if (feature.properties && feature.properties.popupContent) {
                layer.bindPopup(feature.properties.popupContent);
            }
        }

        // customize markers for athletes
        var geojsonMarkerOptions = {
            radius: 8,
            fillColor: "#ff7800",
            color: "#000",
            weight: 1,
            opacity: 1,
            fillOpacity: 0.8
        };

        // get racers from rails variable
        var features = $('.racers_class').data('racers');

        // plot desired racers on map
        var i;
        for (i = 0; i < features.length; i++) {
            var current_racer = features[i];

            var geojsonFeature = {
                "type": "Feature",
                "properties": {
                    "bib": current_racer.bib,
                    "time": current_racer.time,
                    "popupContent": "Racer: " + current_racer.bib + ", Time: " + current_racer.time
                },
                "geometry": {
                    "type": "Point",
                    "coordinates": [current_racer.latitude, current_racer.longitude]
                }
            };

            L.geoJson(geojsonFeature, {
                pointToLayer: function (feature, latlng) {
                    return L.circleMarker(latlng, geojsonMarkerOptions);
                },
                onEachFeature: onEachFeature

            }).addTo(map);

        }
    }
    window.onload = main;
</script>

<%= debug(params) if Rails.env.development? %>