<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">

<style>
    #progress-container-outer {
        top:100px;
        position:relative;
        z-index:100;
        display:none;
    }
    #progress-container-inner {
        position:relative;
    }

</style>

<!-- Modal -->
<div class="modal fade" id="raceFromNewRoute" tabindex="-1" role="dialog" aria-labelledby="raceFromNewRouteLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h2 class="modal-title" id="raceFromNewRouteLabel">Create New Race</h2>
      </div>
      <div class="modal-body">
        <form role="form">
          <div class="form-group">
            <label for="routeid"><span class="glyphicon glyphicon-road"></span> Route ID</label>
            <input required type="text" class="form-control" id="routeid" placeholder="Enter a unique route identification name">
          </div>
          <div class="form-group">
            <label for="raceid"><span class="glyphicon glyphicon-registration-mark"></span> Race ID</label>
            <input required type="text" class="form-control" id="raceid" placeholder="Enter a unique race identification name">
          </div>
          <!--<div class="checkbox">-->
          <!--<label><input type="checkbox" value="" checked>Remember me</label>-->
          <!--</div>-->
          <button type="submit" id="createRace" class="btn btn-default btn-success btn-block"><span class="glyphicon glyphicon-ok"></span> Create Race</button>
        </form>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-danger btn-default pull-left" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Cancel</button>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>


<!-- Modal -->
<div class="modal fade" id="progressModal" tabindex="-1" role="dialog" aria-labelledby="progressModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h2 class="modal-title" id="progressModalLabel">Progress</h2>
      </div>
      <div class="modal-body">

        <!--<div class="container" id="progress-container-outer">-->
        <div id="progress-container-inner">
          <h5>Percentage of Route Uploaded</h5>
          <div class="progress">
            <div class="progress-bar" id="progress-bar-ui" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:0%">
              0%
            </div>
          </div>
        </div>
        <!--</div>-->

      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-danger btn-default pull-left" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Cancel</button>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>


<div id="map"></div>

<script type="text/javascript">

    $("#createRace").click( function (e) {

        var routeID = $('#routeid').val();
        var raceID = $('#raceid').val();

        if (routeID && raceID) {
            e.preventDefault();
            $('#raceFromNewRoute').modal('toggle');
            $('#progressModal').modal('toggle');

            exportRace(raceID, routeID);
            exportRoute(routeID);
        }

    });

    var startPoint = [43.1249, 1.254];
    var map = L.map('map', { editable: true }).setView(startPoint, 3);

    //    var tilelayer = L.tileLayer('http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {
    //        maxZoom: 20,
    //        attribution: 'Data \u00a9 <a href="http://www.openstreetmap.org/copyright"> OpenStreetMap Contributors </a> Tiles \u00a9 HOT'
    //    }).addTo(map);

    var tilelayer = L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}@2x.png', {
        //bounds: bounds,
        maxZoom: 20,
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, &copy; <a href="http://cartodb.com/attributions">CartoDB</a>'
    });
    map.addLayer(tilelayer);

    var editMode = false;

    var geo = {
        type: 'FeatureCollection',
        features: [
            {
                "type": "Feature",
                "properties": {},
                "geometry": {
                    "type": "LineString",
                    "coordinates": [
                        [
                            -74.3613,
                            41.669898,
                            604.254761
                        ],
                        [
                            -74.361234,
                            41.669996,
                            604.846802
                        ],
                        [
                            -74.244535,
                            41.734131,
                            435.246216
                        ],
                        [
                            -74.244535,
                            41.734272,
                            435.884979
                        ]
                    ]
                }
            }
        ]
    }


    var className = "BASE_POINTS";
    var routeOptionsTitle = "ROUTE_OPTIONS";
    var routeOptions = {
        title: routeOptionsTitle,
        style: { color:'red' },
    };

    //    L.Control.FileLayerLoad.LABEL = '<i class="fa fa-folder-open"></i>';
    L.Control.FileLayerLoad.LABEL = '<i class="glyphicon glyphicon-import"></i>';

    var control = L.Control.fileLayerLoad({
        // See http://leafletjs.com/reference.html#geojson-options
        layerOptions: routeOptions,
        // Add to map after loading (default: true) ?
        addToMap: true,
        // File size limit in kb (default: 1024) ?
        fileSizeLimit: 1024,
        // Restrict accepted file formats (default: .geojson, .kml, and .gpx) ?
        formats: [
            '.geojson',
            '.kml',
            '.gpx'
        ]
    }).addTo(map);


    L.Control.NewEditControl = L.Control.extend({

        options: {
            position: 'topleft'
        },

        onAdd: function (map) {
            var container = L.DomUtil.create('div', 'leaflet-control leaflet-bar');
            var link = L.DomUtil.create('a', '', container);

            link.href = '#';
            link.title = 'Edit route';
            link.innerHTML = '<i class="glyphicon glyphicon glyphicon-pencil"></i>';

            L.DomEvent.on(link, 'click', L.DomEvent.stop)
                    .on(link, 'click', function () {
                        editRoute();
                    });

            return container;
        }
    });


    L.Control.NewExportControl = L.Control.extend({

        options: {
            position: 'topleft'
        },

        onAdd: function (map) {
            var container = L.DomUtil.create('div', 'leaflet-control leaflet-bar'),
                    link = L.DomUtil.create('a', '', container);

            link.href = '#';
            link.title = 'Export route to server';
            link.innerHTML = '<i class="glyphicon glyphicon-export"></i>';
            L.DomEvent.on(link, 'click', L.DomEvent.stop)
                    .on(link, 'click', function () {
                        $('#raceFromNewRoute').modal('toggle');
                    });

            return container;
        }
    });

    map.addControl(new L.Control.NewEditControl());
    map.addControl(new L.Control.NewExportControl());

    // getting all the features at once
    function editRoute() {
        editMode = true;
        enableRouteEditing(map, className, routeOptionsTitle);
    }

    function exportRace(raceID, routeID) {
        var raceJSON = {
            "race": {
                "raceid": raceID,
                "routeid": routeID
            }
        };
        $.ajax({
            type: 'POST',
            async: false,
            url: '/races',
            data: raceJSON,
            success: function() {
                console.log("Success!");
            }
        });
    }

    // getting all the features at once
    function exportRoute(routeID) {
        var routeJSON = {
            "route": {
                "routeid": routeID
            }
        };
        $.ajax({
            type: 'POST',
            async: false,
            url: '/routes',
            data: routeJSON,
            success: function() {
                console.log("Success!");
            }
        });

        disableRouteEditing(routeID, map, className, routeOptions, routeOptionsTitle, editMode);
    }

</script>

<h5>List of available races</h5>
<%= select("race", "raceid", Race.all.collect {|race| [ race.raceid, race.raceid ] }, {include_blank: 'None'}) %>
<h5>List of available routes</h5>
<%= select("route", "routeid", Route.all.collect {|route| [ route.routeid, route.routeid ] }, {include_blank: 'None'}) %>

<!--<%= debug(params) if Rails.env.development? %>-->